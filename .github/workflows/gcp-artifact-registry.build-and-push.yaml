name: Docker Build and Push

on:
  workflow_call:
    secrets:
      PLANTON_CLOUD_CLIENT_EMAIL:
        required: true
      PLANTON_CLOUD_CLIENT_SECRET:
        required: true

    inputs:
      PLANTON_CLOUD_ARTIFACT_STORE_ID:
        description: 'ID of the Artifact Store on Planton Cloud.'
        type: string
        required: true
      DOCKER_REPO_HOSTNAME:
        description: 'Hostname of the Docker repository'
        type: string
        required: true
      CONTAINER_IMAGE_REPO:
        description: 'Repo of the Docker image to be built and pushed.'
        type: string
        required: true
      CONTAINER_IMAGE_TAG:
        description: 'Tag of the Docker image to be built and pushed.'
        type: string
        required: true
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Install Planton CLI
        uses: plantoncloud/install-planton-cli-action@main
      
      - name: Login to Planton Cloud
        uses: plantoncloud/planton-cli-login-action@main
        with:
          planton_cloud_client_email: ${{ secrets.PLANTON_CLOUD_CLIENT_EMAIL }}
          planton_cloud_client_secret: ${{ secrets.PLANTON_CLOUD_CLIENT_SECRET }}

      - name: GCP Artifact Registry Docker Login
        uses: plantoncloud/gcp-artifact-registry-docker-login-action@main
        with:
          planton_cloud_artifact_store_id: ${{ inputs.PLANTON_CLOUD_ARTIFACT_STORE_ID }}
          docker_repo_hostname: ${{ inputs.DOCKER_REPO_HOSTNAME }}

      - name: Build & Push Docker Image
        uses: plantoncloud/build-and-push-docker-image-action@main
        with:
          docker_repo_hostname: ${{ inputs.DOCKER_REPO_HOSTNAME }}
          container_image_repo: ${{ inputs.CONTAINER_IMAGE_REPO }}
          container_image_tag: ${{ inputs.CONTAINER_IMAGE_TAG }}
